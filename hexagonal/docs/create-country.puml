@startuml
skinparam monochrome true
skinparam BoxPadding 5
header Ports and Adapter POC
title Create Country Use Case

hide footbox
actor HttpClient as user << User >>

box "REST Application" #FBFBFB
 participant "RestApi" as api << API >>
 participant "CountryValidator" as validator << RequestValidator >>
 participant "CountryView" as view << Converter >>
end box
box "Domain / Application" #FBFBFB
 participant "Country" as country << Model >>
 participant "CountryService" as service << Service >>
end box
box "Infrastructure" #FBFBFB
 participant "CountryRepository" as repository << Repository >>
 participant "CountryDbo" as dbo << Converter >>
 participant "SlickDriver" as db << DatabaseDriver >>
end box

database PostgreSQL as pgdb

autonumber
user -> api: Post[CountryRequest]
api -> validator : validate(TupleN[CountryRequest])
validator --> country **: smart-new
validator --> api: IO[Country]
api -> service: create(Country)
service -> dbo: from(Country)
dbo --> service: IO[CountryDbo]
service -> repository: insert(CountryDbo)
repository -> db : insert(CountryDbo)
db -> pgdb : sql-insert
db --> repository : IO[Id]
repository --> service : IO[Country]
service --> api : IO[Country]
api -> view : from(Country)
view --> api : IO[CountryView]
api -> api: buildContentLocation
api --> user : (Content-Location,CountryView)
@enduml